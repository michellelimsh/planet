CREATE QUERY jaccard_similarity (VERTEX source, STRING e_type, STRING rev_e_type, 
 INT top_k = 100, BOOL print_accum = TRUE, STRING similarity_edge_type = "") SYNTAX V1 {
 
/* 
Calculates the Jaccard Similarity between a given vertex and every other vertex.
  Jaccard similarity = intersection_size / (size_A + size_B - intersection_size)
*/

  SumAccum<INT> @sum_intersection_size, @@sum_set_size_A, @sum_set_size_B;
  SumAccum<FLOAT> @sum_similarity;

  Start (ANY) = {source};
  Start = SELECT s
    FROM Start:s
    ACCUM @@sum_set_size_A += s.outdegree(e_type);

  Subjects = SELECT t
       FROM Start:s-(e_type:e)-:t;

  Others = SELECT t
     FROM Subjects:s -(rev_e_type:e)- :t
     WHERE t != source
     ACCUM 
         t.@sum_intersection_size += 1,
         t.@sum_set_size_B = t.outdegree(e_type)
     POST-ACCUM 
         t.@sum_similarity = t.@sum_intersection_size*1.0/(@@sum_set_size_A + t.@sum_set_size_B - t.@sum_intersection_size)
     ORDER BY t.@sum_similarity DESC
     LIMIT top_k;
  
  Others = SELECT s
     FROM Others:s
     POST-ACCUM 
         IF similarity_edge_type != "" THEN
             INSERT INTO EDGE similarity_edge_type VALUES (source, s, s.@sum_similarity)
         END; 

  IF print_accum THEN
      PRINT Others[Others.@sum_similarity];
  END;
}